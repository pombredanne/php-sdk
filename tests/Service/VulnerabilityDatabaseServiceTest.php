<?php
/**
 * VulnDB PHP SDK
 *
 * @copyright 2015 Anthon Pang
 *
 * @license http://opensource.org/licenses/MIT MIT
 */

namespace VulnDb\Tests\Service;

use VulnDb\Service\VulnerabilityDatabaseService;
use VulnDb\Vulnerability;

class VulnerabilityDatabaseServiceTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @group functional
     */
    public function testUpdateDb()
    {
        $this->markTestSkipped('TODO: move GitWrapper to service factory');
    }

    /**
     * @group functional
     */
    public function testLoadDb()
    {
        $this->markTestSkipped('TODO: move Finder to service factory');
    }

    /**
     * @group functional
     */
    public function testGetAllIds()
    {
        $obj = new VulnerabilityDatabaseService();

        $ids = $obj->getAllIds();

        $this->assertTrue(count($ids) > 0);
        $this->assertTrue(is_numeric($ids[0]));
    }

    /**
     * @group functional
     */
    public function testGetById()
    {
        $obj = new VulnerabilityDatabaseService();

        $vulnerability = $obj->getById(52);

        $this->assertTrue($vulnerability instanceof Vulnerability);
    }

    /**
     * @group functional
     */
    public function testFilterBySeverity()
    {
        $obj = new VulnerabilityDatabaseService();

        $vulnerabilities = $obj->filterBySeverity('high');

        $this->assertTrue(count($vulnerabilities) > 0);
        $this->assertTrue($vulnerabilities[0] instanceof Vulnerability);
    }

    /**
     * @group functional
     */
    public function testFilterByTag()
    {
        $obj = new VulnerabilityDatabaseService();

        $vulnerabilities = $obj->filterByTag('web');

        $this->assertTrue(count($vulnerabilities) > 0);
        $this->assertTrue($vulnerabilities[0] instanceof Vulnerability);
    }
}
